#!/usr/bin/env python3

###############################################################################

DEV_PATTERN = "/dev/input/event*"
STATE_FNAME = "/home/rilla/.screen_state"
DEFAULT_STATE = True
IDLE_TIME = 10  # minutes
SENSOR_PIN = 11

###############################################################################

import glob
import sys
import time

from count_down import CountDown
from input_dev import InputDev
from screen import Screen
from sensor import Sensor

###############################################################################

def query_state(fname, default_state=True):
    values = {"on":    True,
              "1":     True,
              "true":  True,
              "t":     True,
              "off":   False,
              "0":     False,
              "f":     False,
              "false": False}
    try:
        with open(fname) as fh:
            screen_state = values[fh.read().strip().split()[0].lower()]
    except:
        screen_state = default_state
    return screen_state

screen = Screen(True)
clock = CountDown(IDLE_TIME*60, 1, lambda: screen.turn(False))

def activity():
    clock.reset()
    wanted_state = query_state(STATE_FNAME, DEFAULT_STATE)
    screen.turn(wanted_state)

procs = [InputDev(x, activity) for x in glob.glob(DEV_PATTERN)]
sensor = Sensor(SENSOR_PIN, activity)
procs.append(sensor)
procs.append(clock)

###############################################################################

def main ():
    for p in procs:
        p.start()

    while True:
        time.sleep(1)

if __name__ == "__main__":
    sys.exit(main())

##############################################################################
